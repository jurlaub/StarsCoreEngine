"""
    This file is part of Stars Core Engine, which provides an interface and processing of Stars data.
    Copyright (C) 2014  <Joshua Urlaub + Contributors>

    Stars Core Engine is free software: you can redistribute it and/or modify
    it under the terms of the Lesser GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Stars Core Engine is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    Lesser GNU General Public License for more details.

    You should have received a copy of the Lesser GNU General Public License
    along with Stars Core Engine.  If not, see <http://www.gnu.org/licenses/>.

    Contributors to this project agree to abide by the interpretation expressed in the 
    COPYING.Interpretation document.

"""


'''
    Player Data

    players race file starts as <'race_name'.r1>
    > this establishes the basic race information that is generated by the RaceWizard
    RaceWizard data needs to be saved and referenced. 

    PRT Summary:
    >PRT ==> changes how species operate in some manner. typically acts as an augmentation
    >>> WM = extra hulls + tech, better invasion, better ship speed etc, invasion benefit
    >>> SS = base stealth, extra hulls, extra tech, capture percent of research resources
    >>> JOAT = base pop higher, scout hulls have intrinsic pen scanners
    >>> IT = extra tech, jump cargo and pop through gates, better at gating, 2nd planets
    >>> PP = extra tech, extra planet, diff pack behavior
    >>> SD = extra hulls, extra tech, diff minefild behavior,
    >>> HE = extra hulls, extra engine, double growthrate, half pop capacity
    >>> IS = extra tech, invasion benefit
    >>> AR = special housing, extra hulls, different behavior


    >LRT ==> chages how a species operate in a smaller manner
    >>> UR = ultimate recycling
    >>> IFE = Access two unique engines? no ramscoops
    >>> Double Shields = 
    >>> no pen scanners
    >>> 



    > Player object should track
    >> race file data
    >> habitable planets (list?)
    >> (list?) of fleets object ids 
    >> minefild list?
    >> tech levels
    >> ship designs
    >> player VC data
    >>

'''

'''
    New Game  & New player
    > player race file name is added to the Custom File.
    > one name for each list.
    > name of file must match race name for new game setup

'''


class Player(object):
    """
    Contains player related data that is not space objects.

    Case for multiple inheritance:
    > inherits a set of behaviors that changes based on the PRT

    """

    def __init__(self, raceData):
        self.raceName = raceData.raceName
        self.raceNamePlural = raceData.raceName
        #self.homeUniverse = None
        self.race = raceData #RaceData()
        self.colonies = {}  # colony objects
        self.tech = {}  # tech object
        self.shipDesign = {} # ship design objects
        self.battleOrders = {} 
        self.production = {} 
        self.turnOrders = {}
        self.diplomacy = {} # diplomacy object?
        self.intel = {} 




class RaceData(object):
    """
    Contains data from RaceWizard.
    """
    def __init__(self, raceName):
        self.raceName = raceName
        self.raceNamePlural = raceName
        
        #self.PRT = 'SS'

        #self.LRT = []

        self.popGrowthRate = .14
        
        #--- TODO ---
        # add resource gen: per xx(800-2500) pop yy(8-15) resources generated
        #self.popEfficiency = 10   # ?



        '''
        #Environment
        >> Consists of centerpoint & range

        |------<==========x==========>----------------------|

        >> the range value captures only the positive side of the total 
        habitat values 

        immune = None value for centerpoint

        '''
        self.habGravityCenter = 1  # (centerpoint, Click width)?  
        self.habGravRange = 15.0  # pos range from Center. Total range doubled  
        
        self.habTempCenter = 70
        self.habTempRange = 25.0

        self.habRadCenter = 50
        self.habRadRange = 15.0


        self.factoryRun = 10
        self.factoryCost = 10
        self.factoryRate = 10
        
        self.mineRun = 10
        self.mineCost = 10
        self.mineRate = 10
        

    



